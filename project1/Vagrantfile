# -*- mode: ruby -*-
# vi: set ft=ruby :


# $script = <<-SCRIPT
# sudo apt-get update -y
# sudo apt-get install -y ca-certificates curl gnupg
# sudo install -m 0755 -d /etc/apt/keyrings
# curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
# sudo chmod a+r /etc/apt/keyrings/docker.gpg
# echo \
#   "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
#   "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
#   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
# sudo apt-get update -y
# sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
# sudo usermod -a -G docker vagrant
# docker login -u hedgehoon --password-stdin < /vagrant/env/docker_token
# SCRIPT

Vagrant.configure("2") do |config|
    config.vm.box = "ubuntu/focal64"

    config.vm.define "dock" do |dock|
        dock.vm.hostname = "docker-registry"
        dock.vm.provider "virtualbox" do |vb|
            vb.name = "docker-registry"
            vb.cpus = 4
            vb.memory = 4096
        end
        dock.vm.network "private_network", ip: "192.168.10.14"
        dock.vm.provision "shell", inline: <<-SCRIPT
            sudo apt-get update -y
            sudo apt-get install -y ca-certificates curl gnupg lsb-release
            sudo install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            sudo chmod a+r /etc/apt/keyrings/docker.gpg
            echo \
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update -y
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            sudo usermod -a -G docker vagrant
            sudo systemctl enable docker
            sudo systemctl start docker
            docker login -u hedgehoon --password-stdin < /vagrant/env/docker_token
        SCRIPT

    end
    config.vm.define "jenk" do |jenk|
        jenk.vm.hostname = "Jenkins"
        jenk.vm.provider "virtualbox" do |vb|
            vb.name = "Jenkins"
            vb.cpus = 4
            vb.memory = 2048
        end
        jenk.vm.network "private_network", ip: "192.168.10.15"
        jenk.vm.provision "shell", inline: <<-SCRIPT
            sudo apt-get update -y
            sudo apt-get install -y ca-certificates curl gnupg lsb-release
            sudo install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            sudo chmod a+r /etc/apt/keyrings/docker.gpg
            echo \
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update -y
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            sudo usermod -a -G docker vagrant
            sudo systemctl enable docker
            sudo systemctl start docker
            docker login -u hedgehoon --password-stdin < /vagrant/env/docker_token
        SCRIPT
    end

    config.vm.define "nfs" do |nfs|
        nfs.vm.hostname = "NFS"
        nfs.vm.provider "virtualbox" do |vb|
            vb.name = "NFS"
            vb.cpus = 4
            vb.memory = 2048
        end
        nfs.vm.network "private_network", ip: "192.168.10.16"
    end

    config.vm.define "ngrok" do |ngrok|
        ngrok.vm.hostname = "Ngrok-server"
        ngrok.vm.provider "virtualbox" do |vb|
            vb.name = "Ngrok-server"
            vb.cpus = 4
            vb.memory = 2048
        end
        ngrok.vm.network "private_network", ip: "192.168.10.17"
    end

    config.vm.define "sonar" do |sonar|
        sonar.vm.hostname = "SonarQube"
        sonar.vm.provider "virtualbox" do |vb|
            vb.name = "SonarQube"
            vb.cpus = 4
            vb.memory = 4096
        end
        sonar.vm.network "private_network", ip: "192.168.10.18"
    end
    
end